require(sjPlot)
require(ggplot2)
require(RColorBrewer)
library("reshape2")
require("survey")
source("./FRS_tools/make_flatfile.R")
##Logical flags for later analysis #
source("./FRS_tools/calculate_logical_flags.R")
## Calculate deflated household incomes
source("./FRS_tools/calculate_household_incomes.R")
source("./FRS_tools/calculate_weights.R")
## Tidy up tenure
source("./FRS_tools/tidy_tenure.R")
## Tidy up regions
source("./FRS_tools/tidy_regions.R")
## Region comparison plotting function
source("./FRS_tools/plot_survey_grpdregion.R")
## Calculate equivalising weights
source("./FRS_tools/calculate_equivalise.R")
## Calculate percentile values for a continuous distribution
source("./FRS_tools/calculate_percentile.R")
## Calculate percentile values for a continuous distribution
source("./FRS_tools/assign_percentile.R")
## Append 2015 MIS amounts
source("./FRS_tools/append_mis.R")
#make plots of household charactersitics
source("./FRS_tools/make_household_plots.R")
#compare charactersitics of JAM groups
source("./FRS_tools/compare_JAM_plots.R")
#compare charactersitics of all LIPR groups
source("./FRS_tools/compare_LIPR_plots.R")
source("./FRS_tools/compare_LIPR_plots_refine.R")
flag.shared.ownership <- function (data_table){
shared_thresh <- read.csv("./shared_ownership_13141415thresholds.csv", stringsAsFactors = FALSE)
shared_thresh <- data.table(shared_thresh)
shared_keycols = c("GVTREGN", "year")
shared_cols = c("GVTREGN", "shared", "shared_deposit", "year" )
setkeyv(data_table, shared_keycols)
setkeyv(shared_thresh, shared_keycols)
data_table <- merge(data_table , shared_thresh[ , .SD, .SDcols = shared_cols], by = shared_keycols, all.x = TRUE)
data_table[ , aff_shared_noincben := ifelse( hh_grossinc_noincben >= shared, 1, 0 )]
data_table[ , cant_shareddep := ifelse( (bu_savings < (shared_deposit - 1000)) & (ADDMON == 2 | behind_debts==1), 1, 0 )]
#flag for shared ownership situation
data_table[ , affanddep_shared := 0]
data_table[ , affanddep_shared := ifelse(aff_shared_noincben==1 & cant_shareddep==1, 1 , 0)]
data_table[ , affanddep_shared := ifelse(aff_shared_noincben==1 & cant_shareddep==0, 2 , affanddep_shared)]
data_table[ , affanddep_shared := ifelse(aff_shared_noincben==0 , 0 , affanddep_shared)]
return(data_table)
}
survey_dir <- "S:/@Communications, Policy and Campaigns/Research/STATS & INFO/Statistics/Household Surveys/"
dt_1415 <- make.flatfile(survey_dir, "1415")
dt_1314 <- make.flatfile(survey_dir, "1314")
dt_1415[ , year := "1415"]
dt_1314[ , year := "1314"]
l <- list(dt_1314, dt_1415)
dt_1315 <- rbindlist(l, fill = TRUE)
rm(l)
source('S:/@Communications, Policy and Campaigns/Research/RESEARCH/More Affordable Homes/Future of low rent homes/low_rent_homes_report/FRS_tools/append_mis.R')
dt_1315 <- calculate.logical.flags(dt_1315, "1315")
dt_1315 <- calculate.weights(dt_1315, 1)
dt_1315 <- tidy.tenure(dt_1315)
#Calculate equivalisation weights (according to HBAI spec)
dt_1315<- calculate.equivalise(dt_1315)
#calculate income, including equivalised
dt_1315 <- calculate.household.incomes(dt_1315, "FRS", TRUE)
dt_1315 <- flag.shared.ownership(dt_1315)
dt_1315 <- tidy.regions(dt_1315, "1315")
dt_1315[ , not_1stbenu := ifelse(BENUNIT >1 , 1, 0)]
dt_1315[ , multiple_benu := ifelse( (sum(not_1stbenu) > 0), 1, 0 ), by = .(SERNUM, year) ]
rm(dt_1315)
l <- list(dt_1314, dt_1415)
dt_1315 <- rbindlist(l, fill = TRUE)
rm(l)
dt_1315 <- calculate.logical.flags(dt_1315, "1315")
dt_1315 <- calculate.weights(dt_1315, 1)
dt_1315 <- tidy.tenure(dt_1315)
#Calculate equivalisation weights (according to HBAI spec)
dt_1315<- calculate.equivalise(dt_1315)
#calculate income, including equivalised
dt_1315 <- calculate.household.incomes(dt_1315, "FRS", TRUE)
dt_1315 <- flag.shared.ownership(dt_1315)
rm(dt_1315)
l <- list(dt_1314, dt_1415)
dt_1315 <- rbindlist(l, fill = TRUE)
rm(l)
dt_1315 <- calculate.logical.flags(dt_1315, "1315")
dt_1315 <- calculate.weights(dt_1315, 1)
dt_1315 <- tidy.tenure(dt_1315)
#Calculate equivalisation weights (according to HBAI spec)
dt_1315<- calculate.equivalise(dt_1315)
#calculate income, including equivalised
dt_1315 <- calculate.household.incomes(dt_1315, "FRS", TRUE)
dt_1315 <- flag.shared.ownership(dt_1315)
rm(dt_1315)
l <- list(dt_1314, dt_1415)
dt_1315 <- rbindlist(l, fill = TRUE)
rm(l)
dt_1315 <- calculate.logical.flags(dt_1315, "1315")
dt_1315 <- calculate.weights(dt_1315, 1)
dt_1315 <- tidy.tenure(dt_1315)
#Calculate equivalisation weights (according to HBAI spec)
dt_1315<- calculate.equivalise(dt_1315)
#calculate income, including equivalised
dt_1315 <- calculate.household.incomes(dt_1315, "FRS", TRUE)
dt_1315 <- flag.shared.ownership(dt_1315)
flag.shared.ownership <- function (data_table){
shared_thresh <- read.csv("./shared_ownership_13141415thresholds.csv", stringsAsFactors = FALSE)
shared_thresh <- data.table(shared_thresh)
return(shared_thresh)
shared_keycols = c("GVTREGN", "year")
shared_cols = c("GVTREGN", "shared", "shared_deposit", "year" )
setkeyv(data_table, shared_keycols)
setkeyv(shared_thresh, shared_keycols)
data_table <- merge(data_table , shared_thresh[ , .SD, .SDcols = shared_cols], by = shared_keycols, all.x = TRUE)
data_table[ , aff_shared_noincben := ifelse( hh_grossinc_noincben >= shared, 1, 0 )]
data_table[ , cant_shareddep := ifelse( (bu_savings < (shared_deposit - 1000)) & (ADDMON == 2 | behind_debts==1), 1, 0 )]
#flag for shared ownership situation
data_table[ , affanddep_shared := 0]
data_table[ , affanddep_shared := ifelse(aff_shared_noincben==1 & cant_shareddep==1, 1 , 0)]
data_table[ , affanddep_shared := ifelse(aff_shared_noincben==1 & cant_shareddep==0, 2 , affanddep_shared)]
data_table[ , affanddep_shared := ifelse(aff_shared_noincben==0 , 0 , affanddep_shared)]
return(data_table)
}
dt_1315 <- flag.shared.ownership(dt_1315)
flag.shared.ownership <- function (data_table){
shared_thresh <- read.csv("./shared_ownership_13141415thresholds.csv", stringsAsFactors = FALSE)
shared_thresh <- data.table(shared_thresh)
return(shared_thresh)
# shared_keycols = c("GVTREGN", "year")
# shared_cols = c("GVTREGN", "shared", "shared_deposit", "year" )
#
# setkeyv(data_table, shared_keycols)
# setkeyv(shared_thresh, shared_keycols)
#
# data_table <- merge(data_table , shared_thresh[ , .SD, .SDcols = shared_cols], by = shared_keycols, all.x = TRUE)
#
# data_table[ , aff_shared_noincben := ifelse( hh_grossinc_noincben >= shared, 1, 0 )]
#
# data_table[ , cant_shareddep := ifelse( (bu_savings < (shared_deposit - 1000)) & (ADDMON == 2 | behind_debts==1), 1, 0 )]
#
# #flag for shared ownership situation
# data_table[ , affanddep_shared := 0]
# data_table[ , affanddep_shared := ifelse(aff_shared_noincben==1 & cant_shareddep==1, 1 , 0)]
# data_table[ , affanddep_shared := ifelse(aff_shared_noincben==1 & cant_shareddep==0, 2 , affanddep_shared)]
# data_table[ , affanddep_shared := ifelse(aff_shared_noincben==0 , 0 , affanddep_shared)]
#
#
# return(data_table)
}
dt_1315 <- flag.shared.ownership(dt_1315)
shared_thresh <- read.csv("./shared_ownership_13141415thresholds.csv", stringsAsFactors = FALSE)
shared_thresh <- data.table(shared_thresh)
shared_thresh[,]
rm(shared_thresh)
flag.shared.ownership <- function (data_table){
shared_thresh <- read.csv("./shared_ownership_13141415thresholds.csv", stringsAsFactors = FALSE)
shared_thresh <- data.table(shared_thresh)
#return(shared_thresh)
shared_keycols = c("GVTREGN", "year")
shared_cols = c("GVTREGN", "shared", "shared_deposit", "year" )
setkeyv(data_table, shared_keycols)
setkeyv(shared_thresh, shared_keycols)
data_table <- merge(data_table , shared_thresh[ , .SD, .SDcols = shared_cols], by = shared_keycols, all.x = TRUE)
data_table[ , aff_shared_noincben := ifelse( hh_grossinc_noincben >= shared, 1, 0 )]
data_table[ , cant_shareddep := ifelse( (bu_savings < (shared_deposit - 1000)) & (ADDMON == 2 | behind_debts==1), 1, 0 )]
#flag for shared ownership situation
data_table[ , affanddep_shared := 0]
data_table[ , affanddep_shared := ifelse(aff_shared_noincben==1 & cant_shareddep==1, 1 , 0)]
data_table[ , affanddep_shared := ifelse(aff_shared_noincben==1 & cant_shareddep==0, 2 , affanddep_shared)]
data_table[ , affanddep_shared := ifelse(aff_shared_noincben==0 , 0 , affanddep_shared)]
return(data_table)
}
rm(dt_1315)
l <- list(dt_1314, dt_1415)
dt_1315 <- rbindlist(l, fill = TRUE)
rm(l)
dt_1315 <- calculate.logical.flags(dt_1315, "1315")
dt_1315 <- calculate.weights(dt_1315, 1)
dt_1315 <- tidy.tenure(dt_1315)
#Calculate equivalisation weights (according to HBAI spec)
dt_1315<- calculate.equivalise(dt_1315)
#calculate income, including equivalised
dt_1315 <- calculate.household.incomes(dt_1315, "FRS", TRUE)
dt_1315 <- flag.shared.ownership(dt_1315)
flag.shared.ownership <- function (data_table){
shared_thresh <- read.csv("./shared_ownership_13141415thresholds.csv", stringsAsFactors = FALSE)
shared_thresh <- data.table(shared_thresh)
return(shared_thresh)
# shared_keycols = c("GVTREGN", "year")
# shared_cols = c("GVTREGN", "shared", "shared_deposit", "year" )
#
# setkeyv(data_table, shared_keycols)
# setkeyv(shared_thresh, shared_keycols)
#
# data_table <- merge(data_table , shared_thresh[ , .SD, .SDcols = shared_cols], by = shared_keycols, all.x = TRUE)
#
# data_table[ , aff_shared_noincben := ifelse( hh_grossinc_noincben >= shared, 1, 0 )]
#
# data_table[ , cant_shareddep := ifelse( (bu_savings < (shared_deposit - 1000)) & (ADDMON == 2 | behind_debts==1), 1, 0 )]
#
# #flag for shared ownership situation
# data_table[ , affanddep_shared := 0]
# data_table[ , affanddep_shared := ifelse(aff_shared_noincben==1 & cant_shareddep==1, 1 , 0)]
# data_table[ , affanddep_shared := ifelse(aff_shared_noincben==1 & cant_shareddep==0, 2 , affanddep_shared)]
# data_table[ , affanddep_shared := ifelse(aff_shared_noincben==0 , 0 , affanddep_shared)]
#
#
#   return(data_table)
}
dt_1315 <- flag.shared.ownership(dt_1315)
shared_thresh <- read.csv("./shared_ownership_13141415thresholds.csv", stringsAsFactors = FALSE)
shared_thresh <- data.table(shared_thresh)
return(shared_thresh)
shared_thresh <- read.csv("./shared_ownership_13141415thresholds.csv", stringsAsFactors = FALSE)
shared_thresh <- data.table(shared_thresh)
shared_thresh
typeof(shared_thresh[, year])
flag.shared.ownership <- function (data_table){
shared_thresh <- read.csv("./shared_ownership_13141415thresholds.csv", stringsAsFactors = FALSE)
shared_thresh <- data.table(shared_thresh)
return(shared_thresh)
# shared_keycols = c("GVTREGN", "year")
# shared_cols = c("GVTREGN", "shared", "shared_deposit", "year" )
#
# setkeyv(data_table, shared_keycols)
# setkeyv(shared_thresh, shared_keycols)
#
# data_table <- merge(data_table , shared_thresh[ , .SD, .SDcols = shared_cols], by = shared_keycols, all.x = TRUE)
#
# data_table[ , aff_shared_noincben := ifelse( hh_grossinc_noincben >= shared, 1, 0 )]
#
# data_table[ , cant_shareddep := ifelse( (bu_savings < (shared_deposit - 1000)) & (ADDMON == 2 | behind_debts==1), 1, 0 )]
#
# #flag for shared ownership situation
# data_table[ , affanddep_shared := 0]
# data_table[ , affanddep_shared := ifelse(aff_shared_noincben==1 & cant_shareddep==1, 1 , 0)]
# data_table[ , affanddep_shared := ifelse(aff_shared_noincben==1 & cant_shareddep==0, 2 , affanddep_shared)]
# data_table[ , affanddep_shared := ifelse(aff_shared_noincben==0 , 0 , affanddep_shared)]
#
#
#   return(data_table)
}
shared_thresh
typeof(shared_thresh[, year])
flag.shared.ownership <- function (data_table){
shared_thresh <- read.csv("./shared_ownership_13141415thresholds.csv", stringsAsFactors = FALSE)
shared_thresh <- data.table(shared_thresh)
#return(shared_thresh)
shared_keycols = c("GVTREGN", "year")
shared_cols = c("GVTREGN", "shared", "shared_deposit", "year" )
setkeyv(data_table, shared_keycols)
setkeyv(shared_thresh, shared_keycols)
data_table <- merge(data_table , shared_thresh[ , .SD, .SDcols = shared_cols], by = shared_keycols, all.x = TRUE)
data_table[ , aff_shared_noincben := ifelse( hh_grossinc_noincben >= shared, 1, 0 )]
data_table[ , cant_shareddep := ifelse( (bu_savings < (shared_deposit - 1000)) & (ADDMON == 2 | behind_debts==1), 1, 0 )]
#flag for shared ownership situation
data_table[ , affanddep_shared := 0]
data_table[ , affanddep_shared := ifelse(aff_shared_noincben==1 & cant_shareddep==1, 1 , 0)]
data_table[ , affanddep_shared := ifelse(aff_shared_noincben==1 & cant_shareddep==0, 2 , affanddep_shared)]
data_table[ , affanddep_shared := ifelse(aff_shared_noincben==0 , 0 , affanddep_shared)]
return(data_table)
}
rm(dt_1315)
l <- list(dt_1314, dt_1415)
dt_1315 <- rbindlist(l, fill = TRUE)
rm(l)
#Prep 1315 data set ####
dt_1315 <- calculate.logical.flags(dt_1315, "1315")
dt_1315 <- calculate.weights(dt_1315, 1)
dt_1315 <- tidy.tenure(dt_1315)
#Calculate equivalisation weights (according to HBAI spec)
dt_1315<- calculate.equivalise(dt_1315)
#calculate income, including equivalised
dt_1315 <- calculate.household.incomes(dt_1315, "FRS", TRUE)
dt_1315 <- flag.shared.ownership(dt_1315)
flag.shared.ownership <- function (data_table){
shared_thresh <- read.csv("./shared_ownership_13141415thresholds_1.csv", stringsAsFactors = FALSE)
shared_thresh <- data.table(shared_thresh)
#return(shared_thresh)
shared_keycols = c("GVTREGN", "year")
shared_cols = c("GVTREGN", "shared", "shared_deposit", "year" )
setkeyv(data_table, shared_keycols)
setkeyv(shared_thresh, shared_keycols)
data_table <- merge(data_table , shared_thresh[ , .SD, .SDcols = shared_cols], by = shared_keycols, all.x = TRUE)
data_table[ , aff_shared_noincben := ifelse( hh_grossinc_noincben >= shared, 1, 0 )]
data_table[ , cant_shareddep := ifelse( (bu_savings < (shared_deposit - 1000)) & (ADDMON == 2 | behind_debts==1), 1, 0 )]
#flag for shared ownership situation
data_table[ , affanddep_shared := 0]
data_table[ , affanddep_shared := ifelse(aff_shared_noincben==1 & cant_shareddep==1, 1 , 0)]
data_table[ , affanddep_shared := ifelse(aff_shared_noincben==1 & cant_shareddep==0, 2 , affanddep_shared)]
data_table[ , affanddep_shared := ifelse(aff_shared_noincben==0 , 0 , affanddep_shared)]
return(data_table)
}
dt_1315 <- flag.shared.ownership(dt_1315)
flag.shared.ownership <- function (data_table){
shared_thresh <- read.csv("./shared_ownership_13141415thresholds_1.csv", stringsAsFactors = FALSE)
shared_thresh <- data.table(shared_thresh)
return(shared_thresh)
# shared_keycols = c("GVTREGN", "year")
# shared_cols = c("GVTREGN", "shared", "shared_deposit", "year" )
#
# setkeyv(data_table, shared_keycols)
# setkeyv(shared_thresh, shared_keycols)
#
# data_table <- merge(data_table , shared_thresh[ , .SD, .SDcols = shared_cols], by = shared_keycols, all.x = TRUE)
#
# data_table[ , aff_shared_noincben := ifelse( hh_grossinc_noincben >= shared, 1, 0 )]
#
# data_table[ , cant_shareddep := ifelse( (bu_savings < (shared_deposit - 1000)) & (ADDMON == 2 | behind_debts==1), 1, 0 )]
#
# #flag for shared ownership situation
# data_table[ , affanddep_shared := 0]
# data_table[ , affanddep_shared := ifelse(aff_shared_noincben==1 & cant_shareddep==1, 1 , 0)]
# data_table[ , affanddep_shared := ifelse(aff_shared_noincben==1 & cant_shareddep==0, 2 , affanddep_shared)]
# data_table[ , affanddep_shared := ifelse(aff_shared_noincben==0 , 0 , affanddep_shared)]
#
#
# return(data_table)
}
typeof(shared_thresh[, year])
dt_1315 <- flag.shared.ownership(dt_1315)
typeof(shared_thresh[, year])
typeof(dt_1315[, year])
